/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // WebSocket support
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'

    // JavaFX
    implementation 'org.openjfx:javafx-controls:17.0.1'
    implementation 'org.openjfx:javafx-fxml:17.0.1'

    // QR Code Generation (ZXing)
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.zxing:javase:3.4.1'

    // JSON Processing (Gson)
    implementation 'com.google.code.gson:gson:2.9.0'

    // Zip file handling (for .hhk files)
    implementation 'net.lingala.zip4j:zip4j:2.11.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'hashkitty.java.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx {
    version = "17.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}